<?xml version="1.0" encoding="UTF-8"?>
<!--
	HA-JDBC: High-Availability JDBC
	Copyright 2010 Paul Ferraro
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU Lesser General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.
	
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Lesser General Public License for more details.

	You should have received a copy of the GNU Lesser General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<!DOCTYPE article PUBLIC "-//OASIS//DTD Simplified DocBook XML V1.2CR1//EN" "http://www.docbook.org/xml/simple/1.2CR1/sdocbook.dtd">
<article id="xml">
	<title>XML Configuration</title>
	<para>
		Configuration for an HA-JDBC managed database cluster is contained in an XML file.
	</para>
	<section>
		<title>Locating the configuration file</title>
		<para>
			The algorithm used to locate the configuration file resource at runtime is as follows:
		</para>
		<orderedlist>
			<listitem>
				<para>Determine the potentially parameterized resource name from one of the following sources:</para>
				<orderedlist>
					<listitem>
						<para>
							A <literal>config</literal> property passed to <literal>DriverManager.getConnection(String, Properties)</literal>,
							or the <literal>config</literal> property of the <literal>DataSource</literal>, <literal>ConnectionPoolDataSource</literal>, or <literal>XADataSource</literal>.
						</para>
					</listitem>
					<listitem>
						<para>The <literal>ha-jdbc.<replaceable>cluster-id</replaceable>.configuration</literal> system property.</para>
					</listitem>
					<listitem>
						<para>Use default value: <filename>ha-jdbc.<replaceable>cluster-id</replaceable>.xml</filename></para>
					</listitem>
				</orderedlist>
			</listitem>
			<listitem>
				<para>Format the parameterized resource name using the identifier of the cluster.</para>
			</listitem>
			<listitem>
				<para>
					Convert the formatted resource name to a URL.
					If the resource is not a URL, search for the resource in the classpath using the following class loaders:
				</para>
				<orderedlist>
					<listitem><para>Thread context class loader</para></listitem>
					<listitem><para>Class loader of the current class</para></listitem>
					<listitem><para>System class loader</para></listitem>
				</orderedlist>
			</listitem>
		</orderedlist>
	</section>
	
	<section>
		<title>Configuration file format</title>
		<para>
			The root element of the configuration file has the following definition:
		</para>
		<programlisting>&lt;!ELEMENT ha-jdbc (<link linkend="xml.distributable">distributable</link>?,<link linkend="xml.sync">sync</link>+,<link linkend="xml.cluster">cluster</link>)&gt;</programlisting>
	</section>
	<section id="xml.distributable">
		<title>distributable</title>
		<para>
			Indicates that the database cluster defined in this file will be accessed by multiple JVMs.
			HA-JDBC leverages <ulink url="http://jgroups.org">JGroups</ulink> to handle communication between database clusters across servers.
		</para>
		<programlisting>
&lt;!ELEMENT distributable EMPTY&gt;
&lt;!ATTLIST distributable
  stack   CDATA "udp-sync.xml"
  timeout CDATA "1000"
&gt;</programlisting>
		<variablelist>
			<varlistentry>
				<term>stack</term>
				<listitem>
					<para>Defines one of the following:</para>
					<itemizedlist>
						<listitem><para>Name of a system resource containing the JGroups XML configuration.</para></listitem>
						<listitem><para>URL of the JGroups XML configuration file.</para></listitem>
						<listitem><para>Path of the JGroups XML configuration on the local file system.</para></listitem>
						<listitem><para>Legacy protocol stack property string</para></listitem>
					</itemizedlist>
					<para>
						See the <ulink url="http://community.jboss.org/wiki/JGroups">JGroups wiki</ulink> for assistance with customizing the protocol stack.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>timeout</term>
				<listitem>
					<para>Indicates the number of milliseconds allowed for JGroups operations.</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</section>
	<section id="xml.sync">
		<title>sync</title>
		<para>
			Defines a strategy for synchronizing a database prior to activation.
			If the strategy contains JavaBean properties, you can override their default values.
		</para>
		<programlisting>
&lt;!ELEMENT sync (<link linkend="xml.property">property</link>*)&gt;
&lt;!ATTLIST sync
  id    ID    #REQUIRED
  class	CDATA #REQUIRED
&gt;</programlisting>
		<variablelist>
			<varlistentry>
				<term>id</term>
				<listitem>
					<para>
						Uniquely identifies this synchronization strategy.
						Used when invoking activation management operations.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>class</term>
				<listitem>
					<para>
						Class name of a <ulink url="apidocs/api/net/sf/hajdbc/SynchronizationStrategy.html">SynchronizationStrategy</ulink>.
						A list of available synchronization stategies is described in the <link linkend="sync">Synchronization section</link>.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</section>
	<section id="xml.cluster">
		<title>cluster</title>
		<para>
			Defines the members and behavior of the database cluster.
		</para>
		<programlisting>
&lt;!ELEMENT cluster (<link linkend="xml.database">database</link>+)&gt;
&lt;!ATTLIST cluster
  balancer                (simple|random|round-robin|load) #REQUIRED
  default-sync            IDREF                            #REQUIRED
  dialect                 CDATA                            "standard"
  meta-data-cache         (none|lazy|eager)                #REQUIRED
  transaction-mode        (parallel|serial)                #REQUIRED
  auto-activate-schedule  CDATA                            #IMPLIED
  failure-detect-schedule CDATA                            #IMPLIED
  min-threads             CDATA                            "0"
  max-threads             CDATA                            "100"
  max-idle                CDATA                            "60"
  detect-identity-columns (true|false)                     "false"
  detect-sequences        (true|false)                     "false"
  eval-current-date       (true|false)                     "false"
  eval-current-time       (true|false)                     "false"
  eval-current-timestamp  (true|false)                     "false"
  eval-rand               (true|false)                     "false"
&gt;</programlisting>
		<variablelist>
			<varlistentry>
				<term>balancer</term>
				<listitem>
					<para>
						Defines the balancer implementation used to distribute read operations among the active nodes of this cluster.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>default-sync</term>
				<listitem>
					<para>
						Defines the unique identifier of the synchronization strategy to use by default when activating nodes of this cluster.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>dialect</term>
				<listitem>
					<para>The value of this attribute defines either:</para>
					<itemizedlist>
						<listitem>
							<para>the class name of an implementation of the net.sf.hajdbc.Dialect interface.</para>
						</listitem>
						<listitem>
							<para>a pre-defined alias as enumerated here.</para>
						</listitem>
					</itemizedlist>
					<para>HA-JDBC references the configured dialect for any vendor specific SQL.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>meta-data-cache</term>
				<listitem>
					<para>Defines the strategy to use for caching database meta data.</para>
					<variablelist>
						<varlistentry>
							<term>none</term>
							<listitem>
								<para>Meta data is loaded when requested and not cached.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term>lazy</term>
							<listitem>
								<para>Meta data is loaded and cached as it is requested.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term>shared-lazy</term>
							<listitem>
								<para>Meta data is loaded and cached as it is requested.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term>eager</term>
							<listitem>
								<para>All necessary meta data is loaded and cached during HA-JDBC initialization.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term>shared-eager</term>
							<listitem>
								<para>All necessary meta data is loaded and cached during HA-JDBC initialization.</para>
							</listitem>
						</varlistentry>
					</variablelist>
					<para></para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>transaction-mode</term>
				<listitem>
					<para>
						Indicates whether transactional writes should execute in serial or parallel.
						If your application uses distributed transactions coordinated via a transaction manager (typically provided by an application server) using the X/Open XA protocol then you should use serial mode.
						In serial mode, database writes execute in consistent order across databases in the cluster thereby avoiding deadlocks.
						If your application uses normal database transactions then you may use parallel mode.
						Parallel mode is obviously more efficient than serial mode.
						If you find that your application suffers unacceptably from SQLExceptions due to concurrent updates of the same data then you might want to use serial mode to improve fault tolerance.
					</para>
					<variablelist>
						<varlistentry>
							<term>parallel</term>
							<listitem>
								<para>Transactional writes are executed in parallel, for efficiency.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term>serial</term>
							<listitem>
								<para>Transactional writes are executed in serial, for improved fault tolerance.</para>
							</listitem>
						</varlistentry>
					</variablelist>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>auto-activate-schedule</term>
				<listitem>
					<para>
						Defines a cron schedule for an asynchronous task that will automatically activate any database nodes that are alive, but inactive.
						Schedule should be defined in accordance with the documentation for Quartz CronExpression.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>failure-detect-schedule</term>
				<listitem>
					<para>
						Defines a cron schedule for an asynchronous task that will proactively detect failed database nodes and deactivate them.
						Schedule should be defined in accordance with the documentation for Quartz CronExpression.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>min-threads</term>
				<listitem>
					<para>Defines the minimum size of the thread pool used for executing write operations.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>max-threads</term>
				<listitem>
					<para>Defines the maximum size of the thread pool used for executing write operations.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>max-idle</term>
				<listitem>
					<para>Defines the amount of time for which a non-core idle thread will remain in the thread pool before it is discarded.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>detect-identity-columns</term>
				<listitem>
					<para>
						Indicates whether or not identity columns should be detected (if the configured dialect supports them) and measures taken to ensure that they are replicated correctly.
						If enabled, you should also use an eager meta-data-cache since identity column detection requires several database meta-data queries.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>detect-sequences</term>
				<listitem>
					<para>
						Indicates whether or not sequence operations should be detected (if the configured dialect supports them) and measures taken to ensure that they are replicated correctly.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>eval-current-date</term>
				<listitem>
					<para>
						Indicates whether or not SQL statements containing non-deterministic CURRENT_DATE functions should be replaced with deterministic client-generated values.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>eval-current-time</term>
				<listitem>
					<para>
						Indicates whether or not SQL statements containing non-deterministic CURRENT_TIME functions should be replaced with deterministic client-generated values.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>eval-current-timestamp</term>
				<listitem>
					<para>
						Indicates whether or not SQL statements containing non-deterministic CURRENT_TIMESTAMP functions should be replaced with deterministic client-generated values.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>eval-rand</term>
				<listitem>
					<para>
						Indicates whether or not SQL statements containing non-deterministic RAND() functions should be replaced with deterministic client-generated values.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</section>
	<section id="xml.database">
		<title>database</title>
		<para>
			Defines the databases in this cluster that will be referenced via the java.sql.DriverManager facility.
		</para>
		<programlisting>&lt;!ELEMENT database (name, <link linkend="xml.property">property</link>*, (user, password)?)&gt;</programlisting>
		<variablelist>
			<varlistentry>
				<term>name</term>
				<listitem>
					<para>Defines the JDBC url used to access this database.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><link linkend="xml.property">property</link></term>
				<listitem>
					<para>Defines a property to be passed to the java.sql.Driver.connect() method.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>user</term>
				<listitem>
					<para>Defines the user, if any, that HA-JDBC should use to connect to the database during synchronization and database failure detection.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>password</term>
				<listitem>
					<para>Defines the password, if any, that HA-JDBC should use to connect to the database during synchronization and database failure detection.</para>
				</listitem>
			</varlistentry>
		</variablelist>
		<programlisting>
&lt;!ATTLIST database
  id     CDATA        #REQUIRED
  weight CDATA        "1"
  local  (true|false) "false"
&gt;</programlisting>
		<variablelist>
			<varlistentry>
				<term>id</term>
				<listitem>
					<para>Unique identifier for this database node.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>weight</term>
				<listitem>
					<para>
						Defines the relative weight of this database node.
						The weight is used by the balancer implementation to determine which node will service a read request.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>local</term>
				<listitem>
					<para>Indicates that this database resides on the local machine.</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</section>
	<section id="xml.property">
		<title>property</title>
		<para>
		</para>
		<programlisting>
&lt;!ELEMENT property (#PCDATA)&gt;
&lt;!ATTLIST property
  name CDATA #REQUIRED
&gt;</programlisting>
		<variablelist>
			<varlistentry>
				<term>name</term>
				<listitem>
					<para>
						The name of the property.
						The value of the property is defined in the element contents.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</section>
</article>
